name: Manual Release
on: [push]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ssh-key: ${{ secrets.PUBLISHER_SSH_KEY }}

      - uses: DeterminateSystems/nix-installer-action@v4
      - uses: DeterminateSystems/magic-nix-cache-action@v2

      - run: nix develop -c rainix-rs-artifacts
      - run: nix develop -c rainix-rs-test
      - run: nix develop -c rainix-rs-static
      - run: nix develop -c rainix-wasm-artifacts
      - run: nix develop -c rainix-wasm-test

      - name: Git Config
        run: |
          git config --global user.email "${{ secrets.CI_GIT_EMAIL }}"
          git config --global user.name "${{ secrets.CI_GIT_USER }}"

      - name: Publish to crates.io
        run: nix develop -c cargo release --no-confirm --execute --no-tag
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      # Commit changes and tag
      - name: Commit And Tag
        run: |
          git commit -m "Release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      # Push the commit to remote
      - name: Push Changes To Remote
        run: | 
          git push origin 
          git push -u origin ${{ env.NEW_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create gitHub release with npm tarball
      - name: Create GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
